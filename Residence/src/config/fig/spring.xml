<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd   
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd  
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<context:property-placeholder location="classpath*:config/fig/db.properties" />
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass">
			<value>${db.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${db.url}</value>
		</property>
		<property name="user">
			<value>${db.username}</value>
		</property>
		<property name="password">
			<value>${db.password}</value>
		</property>
		<property name="minPoolSize">
			<value>1</value>
		</property>
		<property name="maxPoolSize">
			<value>50</value>
		</property>
		<property name="maxIdleTime">
			<value>1800</value>
		</property>
		<property name="acquireIncrement">
			<value>2</value>
		</property>
		<property name="maxStatements">
			<value>100</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>1800</value>
		</property>
		<property name="acquireRetryAttempts">
			<value>30</value>
		</property>
		<property name="breakAfterAcquireFailure">
			<value>true</value>
		</property>
		<property name="testConnectionOnCheckout">
			<value>false</value>
		</property>
	</bean>
	
	
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	<aop:config>
	    <aop:pointcut id="productServiceMethods" expression="execution(* com.haiyi.*.service..*.*(..))"/>
	    <aop:advisor advice-ref="txAdvice" pointcut-ref="productServiceMethods"/>
  	</aop:config>
  	
  	
  	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
	      <tx:method name="save*" propagation="REQUIRED"/>
	      <tx:method name="insert*" propagation="REQUIRED"/>
	      <tx:method name="add*" propagation="REQUIRED"/>
	      <tx:method name="update*" propagation="REQUIRED"/>
	      <tx:method name="del*" propagation="REQUIRED"/>
	      <tx:method name="*" propagation="REQUIRED" read-only="true" />
	    </tx:attributes>
	</tx:advice>
	
	
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
     	<property name="dataSource" ref="dataSource" />  
    	<property name="mapperLocations" value="classpath:com/haiyi/**/dao/*.xml"></property>  
    	<property name="typeAliasesPackage" value="com.haiyi.residence.model" /> 
 	</bean>
 	
 	
 	<context:component-scan base-package="com.haiyi"></context:component-scan>
 	
 	
 	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
       <property name="basePackage" value="com.haiyi.residence.**.dao"/> 
       
       <property name="markerInterface" value="com.haiyi.residence.mapper.SuperMapper"/>   
    </bean>
    <mvc:default-servlet-handler />
    <mvc:interceptors>  
        <mvc:interceptor>  
            <!-- 需拦截的地址 -->  
                        <!-- 一级目录 -->  
            <mvc:mapping path="/*.jsp" />  
            <bean class="com.haiyi.web.interceptor.SecurityInterceptor" />  
        </mvc:interceptor>  
    </mvc:interceptors>  
</beans>